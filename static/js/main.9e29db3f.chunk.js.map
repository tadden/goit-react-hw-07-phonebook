{"version":3,"sources":["Componets/Container/Container.module.css","Componets/ContactForm/ContactForm.module.css","Componets/ContactList/ContactList.module.css","Componets/Filter/Filter.module.css","Componets/Container/Container.js","redux/selector.js","services/contacts-api.js","redux/operations.js","Componets/ContactForm/ContactForm.js","Componets/ContactList/ContactList.js","redux/actions.js","Componets/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","getItems","state","contacts","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","name","includes","fetchContacts","a","axios","get","data","addContact","number","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","message","contact","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleNameChange","e","target","value","form","onSubmit","preventDefault","find","duplicateValidator","operations","alert","htmlFor","type","onChange","pattern","title","required","ContactList","useEffect","map","item","onClick","filterContact","createAction","Filter","actions","Phonebook","phonebookReducer","createSlice","initialState","error","reducers","payload","extraReducers","fulfilled","rejected","reducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e29db3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2JIsw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__xhKpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3h3HN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__5hxKf\"};","import s from './Container.module.css';\n\nfunction Container({children}) {\n    return (<div className={s.container}>{children}</div>)\n};\n\nexport default Container;\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};","import axios from 'axios';\n\naxios.defaults.baseURL =\n  'https://61dc3359591c3a0017e1a79a.mockapi.io';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/Contacts`);\n\n  return data;\n}\n\nexport async function addContact(name, number) {\n  const { data } = await axios.post(`/Contacts`, {\n    name,\n    number,\n  });\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const { data } = await axios.delete(`/Contacts/${id}`);\n  return data;\n}\n","import * as contactsAPI from '../services/contacts-api';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/FetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsAPI.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/AddContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      const contact = await contactsAPI.addContact(name, number);\n      return contact;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/DeleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      const contact = await contactsAPI.deleteContact(id);\n      return contact.id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport { getItems } from 'redux/selector';\nimport * as operations from '../../redux/operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleNameChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      // no default\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicateValidator = name =>\n      items.find(contact => contact.name === name);\n\n    duplicateValidator(name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(operations.addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\">Name</label>\n\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label htmlFor=\"\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n}","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as operations from '../../redux/operations';\nimport { getFilteredContacts } from 'redux/selector';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const items = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n\n  return (\n    <ul>\n      {items.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <p>\n            {name} : {number}\n          </p>\n          <button onClick={() => dispatch(operations.deleteContact(id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContact = createAction('contacts/Filter');\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/selector';\nimport * as actions from '../../redux/actions';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filter}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={e =>\n            dispatch(actions.filterContact(e.target.value))\n          }\n        ></input>\n      </label>\n    </div>\n  );\n}","import './App.css';\nimport Container from 'Componets/Container';\nimport ContactForm from 'Componets/ContactForm';\nimport ContactList from 'Componets/ContactList';\nimport Filter from 'Componets/Filter';\n\n\nexport default function Phonebook() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n};\n\n  \n  \n","import { createSlice } from '@reduxjs/toolkit';\nimport * as actions from './actions';\nimport { fetchContacts, deleteContact, addContact } from './operations';\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: { items: [], filter: '', error: null },\n  reducers: {\n    [actions.filterContact]: (state, { payload }) => {\n      state.filter = payload;\n    },\n  },\n  extraReducers: {\n    [fetchContacts.fulfilled]: (state, { payload }) => {\n      state.items = payload;\n    },\n    [addContact.fulfilled]: (state, { payload }) => {\n      state.items = [...state.items, payload];\n    },\n\n    [deleteContact.fulfilled]: (state, { payload }) => {\n      state.items = state.items.filter(({ id }) => id !== payload);\n    },\n    [fetchContacts.rejected]: (state, { payload }) => {\n      state.error = payload;\n    },\n    [addContact.rejected]: (state, { payload }) => {\n      state.error = payload;\n    },\n    [deleteContact.rejected]: (state, { payload }) => {\n      state.error = payload;\n    },\n  },\n});\n\nconst phonebookReducer = contactsSlice.reducer;\n\nexport default phonebookReducer;","import { configureStore } from '@reduxjs/toolkit';\n\nimport phonebookReducer from './reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from 'redux/store';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}